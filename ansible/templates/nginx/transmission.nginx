# vim: set filetype=nginx :
server {
    listen      {{ hostvars[inventory_hostname]['host_ip'] }}:443 ssl;
    http2       on;
    listen      [::]:443 ssl http2;
    server_name files.glitchbra.in;
    root        /usr/local/share/transmission/public_html;

    include ./general.conf;
    include ./security.conf;

    # SSL
    ssl_certificate         {{ etc_dir }}/letsencrypt/live/files.glitchbra.in/fullchain.pem;
    ssl_certificate_key     {{ etc_dir }}/letsencrypt/live/files.glitchbra.in/privkey.pem;
    ssl_trusted_certificate {{ etc_dir }}/letsencrypt/live/files.glitchbra.in/chain.pem;

    # logging
    access_log              /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log               /var/log/nginx/error.log warn;

    location /rpc {
        proxy_pass         http://127.0.0.1:9091/transmission/rpc;
    }
       
    location /upload {
        proxy_pass         http://127.0.0.1:9091/transmission/upload;
    }
    
    location / {
        proxy_read_timeout  300;
        proxy_set_header    Host                 $host;
        proxy_set_header    X-Forwarded-Proto    $scheme;
        proxy_set_header    X-Forwarded-Protocol $scheme;
        proxy_set_header    X-Real-IP            $remote_addr;
        proxy_pass_header   X-Transmission-Session-Id;
        proxy_set_header    X-Forwarded-Host     $host;
        proxy_set_header    X-Forwarded-Server   $host;
        proxy_set_header    X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_pass          http://127.0.0.1:9091/transmission/web/;
    }

}

# HTTP redirect
server {
    listen      {{ hostvars[inventory_hostname]['host_ip'] }}:80;
    listen      [::]:80;
    server_name files.glitchbra.in;
    include     ./letsencrypt.conf;

    location / {
        return 301 https://files.glitchbra.in$request_uri;
    }
}
